#!/usr/bin/env bash
set -e

homelab_dir="$HOME/projects/homelab"

show_help() {
  cat << EOF
Homelab Remote Script Runner

Usage: homelab [OPTIONS] <target_host> <script_path> [script_args...]

Options:
  -h, --help          Show this help message
  -d, --dry-run       Show what would be executed without running
  -l, --list-hosts    List available SSH hosts from config
  -s, --list-scripts  List available scripts
EOF
}

list_scripts() {
  echo -e "Available Scripts:"
  find "$homelab_dir/scripts" -name "*.sh" -type f | sort | while read -r script; do
  local rel_path="${script#"$homelab_dir"/}"
  local description=""

  if [[ -f "$script" ]]; then
    description=$(grep "^# desc:" "$script" | head -1 | sed 's/^# desc:[[:space:]]*//' || echo "")
  fi

  if [[ -n "$description" ]]; then
    echo -e "  $rel_path - $description"
  else
    echo -e "  $rel_path"
  fi
done
}

list_hosts() {
  echo -e "Available SSH Hosts:"
  if [[ -f ~/.ssh/config ]]; then
    grep "^Host " ~/.ssh/config | grep -v "\*" | awk '{print "  " $2}' | sort
  else
    echo "  No SSH config found at ~/.ssh/config"
  fi
}

validate_host() {
  local host="$1"
  if ! grep -q "^Host $host$" ~/.ssh/config 2>/dev/null; then
    echo -e "[WARN ] Host '$host' not found in ~/.ssh/config"
    echo -e "Make sure you can SSH to this host manually"
  fi
}

execute_remote() {
  local target_host="$1"
  local script_path="$2"
  shift 2
  local script_args="$*"

  local script_name
  script_name=$(basename "$script_path")
  local full_script_path="$homelab_dir/$script_path"

  if [[ ! -f "$full_script_path" ]]; then
    echo -e "[ERROR] Script not found: $script_path"
    echo -e "Use 'homelab -s' to list available scripts"
    exit 1
  fi

  validate_host "$target_host"

  chmod +x "$full_script_path"

  echo -e "Executing: $script_name on $target_host"
  if [[ -n "$script_args" ]]; then
    echo -e "Arguments: $script_args"
  fi

  local remote_temp="/tmp/homelab-$"

  ssh "$target_host" "mkdir -p $remote_temp"

  rsync -az --delete \
    --exclude='.git' \
    --exclude='secrets' \
    --exclude='*.env' \
    --exclude='.env*' \
    "$homelab_dir/" "$target_host:$remote_temp/"

  ssh "$target_host" "chmod +x $remote_temp/$script_path"

  if [[ -n "$script_args" ]]; then
    ssh -t "$target_host" "cd $remote_temp && ./$script_path $script_args"
  else
    ssh -t "$target_host" "cd $remote_temp && ./$script_path"
  fi

  local exit_code=$?

  ssh "$target_host" "rm -rf $remote_temp"

  if [[ $exit_code -eq 0 ]]; then
    echo -e "Script completed successfully"
  else
    echo -e "Script failed with exit code: $exit_code"
    exit $exit_code
  fi
}

dry_run=false

while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help)
      show_help
      exit 0
      ;;
    -d|--dry-run)
      dry_run=true
      shift
      ;;
    -l|--list-hosts)
      list_hosts
      exit 0
      ;;
    -s|--list-scripts)
      list_scripts
      exit 0
      ;;
    -*)
      echo -e "Unknown option: $1"
      show_help
      exit 1
      ;;
    *)
      break
      ;;
  esac
done

if [[ $# -lt 2 ]]; then
  echo -e "[ERROR] Missing required arguments"
  echo ""
  show_help
  exit 1
fi

target="$1"
script="$2"
shift 2
arguments="$*"

if [[ "$dry_run" == "true" ]]; then
  echo -e "DRY RUN MODE"
  echo -e "Would execute: $script on $target"
  if [[ -n "$arguments" ]]; then
    echo -e "With arguments: $arguments"
  fi
  echo ""
  echo -e "Script content preview:"
  head -20 "$homelab_dir/$script" 2>/dev/null || echo "Script not found: $script"
  exit 0
fi

execute_remote "$target" "$script" "$arguments"
